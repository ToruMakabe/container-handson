{
    "version": "1.0.0",
    "title": "My application is resilient to pod death",
    "description": "Can my application maintain itself under the conditions of node deallocation?",
    "tags": [
        "kubernetes",
        "azure"
    ],
    "configuration": {
        "azure": {
            "subscription_id": "AZURE_SUBSCRIPTION_ID"
        },
        "service_url": {
            "type": "env",
            "key": "APPLICATION_ENTRYPOINT_URL"
        }
    },
    "secrets": {
        "azure": {
            "client_id": {
                "type": "env",
                "key": "AZURE_CLIENT_ID"
            },
            "client_secret": {
                "type": "env",
                "key": "AZURE_CLIENT_SECRET"
            },
            "tenant_id": {
                "type": "env",
                "key": "AZURE_TENANT_ID"
            }
        }
    },
    "contributions": {
        "availability": "high",
        "reliability": "high",
        "safety": "medium",
        "security": "none",
        "performability": "none"
    },
    "steady-state-hypothesis": {
        "title": "Application is normal",
        "probes": [
            {
                "type": "probe",
                "name": "application-must-respond-normally",
                "tolerance": 200,
                "provider": {
                    "type": "http",
                    "url": "${service_url}",
                    "timeout": 0.5
                }
            }
        ]
    },
    "method": [
        {
            "type": "action",
            "name": "deallocate-vmss",
            "provider": {
                "module": "chaosazure.vmss.actions",
                "type": "python",
                "func": "deallocate_vmss",
                "secrets": [
                    "azure"
                ],
                "config": [
                    "azure"
                ],
                "arguments": {
                    "filter": ""
                }
            },
            "pauses": {
                "after": 2
            }
        }
    ]
}